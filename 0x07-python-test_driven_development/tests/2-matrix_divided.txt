The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------


First import ``matrix_divided`` from ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    >>> matrix = [[1, 2, 3], [4, 5, 6]]

    >>> _matrix = [[1, '2', 3], [4, 5, 6]]

    >>> __matrix = [[1, 2], [3, 4, 5]]

Check for incorrect inputs

    >>> matrix_divided('matrix', 3)
    Traceback (most recent call last):
	    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided(_matrix, 3)
    Traceback (most recent call last):
	    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided(__matrix, 3)
    Traceback (most recent call last):
	    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided(matrix, '3')
    Traceback (most recent call last):
	    ...
    TypeError: div must be a number

    >>> matrix_divided(matrix)
    Traceback (most recent call last):
	    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided()
    Traceback (most recent call last):
	    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
	    ...
    ZeroDivisionError: division by zero


Check for correct inputs

    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
