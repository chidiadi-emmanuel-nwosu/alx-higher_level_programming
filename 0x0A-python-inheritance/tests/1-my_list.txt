The ``1-my_list`` module
========================

Using ``MyList``
----------------

First importing the module:
    >>> MyList = __import__('1-my_list').MyList


Check empty list
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []


Check single input
    >>> my_list = MyList()
    >>> my_list += [5]
    >>> my_list.print_sorted()
    [5]


Check positive numbers
    >>> my_list = MyList()
    >>> my_list += [4]
    >>> my_list.append(1)
    >>> my_list.append(3)
    >>> my_list.append(2)
    >>> my_list.print_sorted()
    [1, 2, 3, 4]


Check repeated numbers
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list += [0]
    >>> my_list.append(2)
    >>> my_list += [2]
    >>> my_list.print_sorted()
    [0, 1, 2, 2]


Check positive and negative numbers
    >>> my_list = MyList()
    >>> my_list += [7]
    >>> my_list += [4]
    >>> my_list.append(0)
    >>> my_list.append(-4)
    >>> my_list.append(1)
    >>> my_list += [-1]
    >>> my_list.print_sorted()
    [-4, -1, 0, 1, 4, 7]


Check if my_list.print_sorted() made a copy of list
    >>> my_list = MyList()
    >>> my_list.append(3)
    >>> my_list.append(1)
    >>> my_list.append(2)
    >>> my_list.print_sorted()
    [1, 2, 3]
    >>> my_list
    [3, 1, 2]


Check if MyList is an instance of the class list
    >>> my_list = MyList()
    >>> isinstance(my_list, list)
    True


Check if Instance has the correct type
    >>> my_list = MyList()
    >>> type(my_list) == MyList
    True


Check if MyList is a subclass of list
    >>> issubclass(MyList, list)
    True


Check for error with argument passed to print_sorted
    >>> my_list = MyList()
    >>> my_list.print_sorted([1, 2, 3])
    Traceback (most recent call last):
    	      ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given


    >>> my_list = MyList()
    >>> my_list.print_sorted([1, 2], [5, 4])
    Traceback (most recent call last):
    	      ...
    TypeError: print_sorted() takes 1 positional argument but 3 were given


Check type of the print_sorted method
    >>> my_list = MyList()
    >>> type(my_list.print_sorted)
    <class 'method'>


Check for __str__
    >>> my_list = MyList()
    >>> my_list.append(5)
    >>> my_list.append(4)
    >>> my_list.append(3)
    >>> print(my_list)
    [5, 4, 3]
